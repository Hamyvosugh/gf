document.addEventListener('DOMContentLoaded', function () {
    // Add click event and ripple effect to each card
    function applyClickAndRippleEffect(card) {
        card.addEventListener('click', function () {
            const url = card.getAttribute('data-url');
            if (url) {
                window.open(url, '_blank'); // Open the link in a new tab
            }
        });

        card.addEventListener('mouseenter', function (e) {
            const ripple = document.createElement('span');
            ripple.classList.add('ripple-effect');

            // Calculate mouse position within the card
            const x = e.clientX - card.getBoundingClientRect().left;
            const y = e.clientY - card.getBoundingClientRect().top;

            ripple.style.left = `${x}px`;
            ripple.style.top = `${y}px`;

            card.appendChild(ripple);

            // Remove ripple effect after animation
            ripple.addEventListener('animationend', function () {
                ripple.remove();
            });
        });
    }

    const cards = document.querySelectorAll('.clickable-card');
    cards.forEach(applyClickAndRippleEffect);

    // Function to filter events based on selected Persian month
    document.addEventListener('DOMContentLoaded', function () {
        // Function to filter events based on selected Persian month
        function filterByMonth(selectedMonth) {
            const cards = document.querySelectorAll('.clickable-card');
            console.log("Selected month for filtering:", selectedMonth); // لاگ اضافه شده برای بررسی ماه انتخابی
            cards.forEach(card => {
                const persianDate = card.getAttribute('data-date');
                console.log("Card Persian Date:", persianDate); // لاگ برای مشاهده تاریخ شمسی کارت‌ها
                const cardMonth = persianDate ? persianDate.split('-')[0] : null;
                console.log("Card Month:", cardMonth); // لاگ برای مشاهده ماه استخراج شده از تاریخ کارت
    
                // Show only cards that match the selected month or show all if no month is selected
                if (selectedMonth === "" || cardMonth === selectedMonth) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        }
    
        // Initialize the filter dropdowns
        const monthFilter = document.getElementById('month-filter');
        if (monthFilter) {
            monthFilter.addEventListener('change', function () {
                console.log("Month filter changed to:", this.value); // لاگ برای بررسی تغییرات ماه در فیلتر
                filterByMonth(this.value);
            });
        }
    });

// Function to filter events based on selected country
function filterByCountry(selectedCountry) {
    const cards = document.querySelectorAll('.clickable-card');
    cards.forEach(card => {
        const tag = card.getAttribute('data-tag');
        // Show only cards that match the selected country or show all if no country is selected
        card.style.display = (selectedCountry === "" || (tag && tag.includes(selectedCountry))) ? '' : 'none';
    });
}

// Attach change event handler to country selector
const countrySelector = document.getElementById('country-selector');
if (countrySelector) {
    countrySelector.addEventListener('change', function () {
        filterByCountry(this.value);
    });
}


    // Function to reset the filter to the current Persian month
    function resetToCurrentMonth() {
        const currentPersianMonth = new Date().toLocaleString('fa-IR-u-nu-latn', { month: '2-digit' });
        const monthFilter = document.getElementById('month-filter');
        if (monthFilter) {
            monthFilter.value = currentPersianMonth;
            filterByMonth(currentPersianMonth);
        }
    }

    // Automatically set the filter to the current month on page load
    resetToCurrentMonth();

    // Convert English numbers to Persian
    function convertNumbersToPersian(number) {
        const persianNumbers = ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'];
        return number.replace(/\d/g, function (d) {
            return persianNumbers[d];
        });
    }

    // Initialize the filter dropdowns
    const monthFilter = document.getElementById('month-filter');
    if (monthFilter) {
        monthFilter.addEventListener('change', function () {
            filterByMonth(this.value);
        });
    }

    const citySelector = document.getElementById('city-selector');
    if (citySelector) {
        citySelector.addEventListener('change', function () {
            filterByCity(this.value);
        });
    }

    // Search and Sort Functions
    function filterEvents() {
        const searchValue = document.getElementById('search-input').value.toLowerCase();
        const cards = document.querySelectorAll('.clickable-card');
        cards.forEach(card => {
            const text = card.textContent.toLowerCase();
            card.style.display = text.includes(searchValue) ? '' : 'none';
        });
    }

    function filterByTag(value) {
        const cards = document.querySelectorAll('.clickable-card');
        cards.forEach(card => {
            const tag = card.getAttribute('data-tag');
            card.style.display = (tag && tag.includes(value)) ? '' : 'none';
        });
    }

    // Attach Search and Sort event handlers to the appropriate elements
    document.getElementById('search-input').addEventListener('keyup', filterEvents);
    document.querySelectorAll('.sort-buttons-container button').forEach(button => {
        button.addEventListener('click', function () {
            const tagValue = this.getAttribute('onclick').match(/filterByTag\('(.+?)'\)/);
            if (tagValue) {
                filterByTag(tagValue[1]);
            }
        });
    });

    // Updated functionality for the reset button
    document.querySelector('[title="بازگشت به حالت اولیه"]').addEventListener('click', resetToCurrentMonth);
});